<?xml version="1.0"?>
<commands>
<cmd><name>+attack</name>
<p class="text">When active the player will fire the weapon he is currently holding. This is the primary command used to make the player fire the gun. For as long as the key that is bound to this command is held down and this command is active the player will keep on firing the gun.</p>
</cmd>

<cmd><name>-attack</name>
<p class="desc">When used the player will stop firing the gun
if "+attack" is active.</p>
</cmd>

<cmd><name>+back</name>
<p class="desc">When active the player will move
backwards.</p>
</cmd>

<cmd><name>-back</name>
<p class="desc">When used the player will stop moving back if
"+back" is active.</p>
</cmd>

<cmd><name>+forward</name>
<p class="desc">When active the player will move
forward.</p>
</cmd>

<cmd><name>-forward</name>
<p class="desc">When used the player will stop moving forward
if "+forward" is active.</p>
</cmd>

<cmd><name>+jump</name>
<p class="desc">When active the player will do a single jump.
The next jump won't be performed
 until "-jump" has been issued.</p>
</cmd>

<cmd><name>-jump</name>
<p class="desc">When used the player will stop jumping if
"+jump" is active.</p>
</cmd>

<cmd><name>+klook</name>
<p class="desc">When active, "+forward" and "+back" become
"+lookup" and "+lookdown"
 respectively. This command is useful if the player needs to look
at objects
 which are above or below him.</p>
</cmd>

<cmd><name>-klook</name>
<p class="desc">When used the forward and back keys will stop
making the player look up and
 down if "+klook" is active.</p>
</cmd>

<cmd><name>+left</name>
<p class="desc">When active the player will turn
left.</p>
</cmd>

<cmd><name>-left</name>
<p class="desc">When used the player will stop turning left if
"+left" is active.</p>
</cmd>

<cmd><name>+lookdown</name>
<p class="desc">When active the player will look
down.</p>
</cmd>

<cmd><name>-lookdown</name>
<p class="desc">When used the player will stop looking down if
"+lookdown" is active.</p>
</cmd>

<cmd><name>+lookup</name>
<p class="desc">When active the player will look
up.</p>
</cmd>

<cmd><name>-lookup</name>
<p class="desc">When used the player will stop looking up if
"+lookup" is active.</p>
</cmd>

<cmd><name>+mlook</name>
<p class="desc">When active moving the mouse or joystick
forwards and backwards performs
 "+lookup" and "+lookdown" respectively. This command is very
useful if the
 player needs to look at objects which are above or below him.
Most players
 execute this command and never remove it. This way they can use
the keyboard to
 move the player forward and back and strafe left and right,
while using the
 mouse to turn the player left and right and to make him look up
and down. In
 order to have this command set permanently you will have to
create a file called
 autoexec.cfg in the qw/ directory and put in the line "+mlook"
into that file.
 By doing this the game will automatically execute the
autoexec.cfg file and it
 will also active that command.
 Almost every player uses this command nowadays, because the
combination of using
 mouse and keyboard is widely considered the best.</p>
</cmd>

<cmd><name>-mlook</name>
<p class="desc">When used the mouse forward and back movement
will stop making the player look
 up and down if "+mlook" is active.</p>
</cmd>

<cmd><name>+movedown</name>
<p class="desc">When active the player will swim down when in
the water.</p>
</cmd>

<cmd><name>-movedown</name>
<p class="desc">When used the player will stop moving down if
"+movedown" is active.</p>
</cmd>

<cmd><name>+moveleft</name>
<p class="desc">When active the player will strafe
left.</p>
</cmd>

<cmd><name>-moveleft</name>
<p class="desc">When used the player will stop moving left if
"+moveleft" is active.</p>
</cmd>

<cmd><name>+moveright</name>
<p class="desc">When active the player will strafe
right.</p>
</cmd>

<cmd><name>-moveright</name>
<p class="desc">When used the player will stop moving right if
"+moveright" is active.</p>
</cmd>

<cmd><name>+moveup</name>
<p class="desc">When active the player will swim up when in
the water.</p>
</cmd>

<cmd><name>-moveup</name>
<p class="desc">When used the player will stop moving up if
"+moveup" is active.</p>
</cmd>

<cmd><name>+right</name>
<p class="desc">When active the player will turn
right.</p>
</cmd>

<cmd><name>-right</name>
<p class="desc">When used the player will stop turning right
if "+right" is active.</p>
</cmd>

<cmd><name>+showscores</name>
<p class="desc">Display scoreboard.</p>
</cmd>

<cmd><name>-showscores</name>
<p class="desc">When used the score screen will disappear if
+showscores is active.</p>
</cmd>

<cmd><name>+showteamscores</name>
<p class="desc">Display team scoreboard.</p>
</cmd>

<cmd><name>-showteamscores</name>
<p class="desc">When used the score screen will disappear if
+showteamscores is active.</p>
</cmd>

<cmd><name>+speed</name>
<p class="desc">When active the player will run.</p>
</cmd>

<cmd><name>-speed</name>
<p class="desc">When used the player will walk.</p>
</cmd>

<cmd><name>+strafe</name>
<p class="desc">When active, "+left" and "+right" function
like "+moveleft" and "+moveright",
 strafing in that direction.</p>
</cmd>

<cmd><name>-strafe</name>
<p class="desc">When used the turn left and turn right keys
will once again perform their
 original functions.</p>
</cmd>

<cmd><name>+use</name>
<p class="desc">When used it will activate objects in the game
that have been designed to react
 at "+use"</p>
</cmd>

<cmd><name>-use</name>
<p class="desc">When used it will stop activating objects in
the game that have been designed to
 react at "+use".</p>
</cmd>

<cmd><name>addip</name><arguments>(ip)</arguments>
<p class="desc">Add a single IP or a domain of IPs to the IP
list of the server. Very useful for
 banning people or for specifing which IPs only have access to
the server.
 Examples:
 addip 123.123.123.123
 addip 123.123.123</p>
</cmd>

<cmd><name>addserver</name>
<p class="desc">Server Browser: This allows you to add a server to the UNBOUND source. This can be used to
quickly bookmark servers.</p>
 </cmd>

<cmd><name>alias</name>
<p class="desc">Used to create a reference to a command or
list of commands. When used without
 parameters, displays all current aliases.
 Note: Enclose multiple commands within quotes and seperate each
command with a semi-colon.</p>
</cmd>

<cmd><name>aliasedit</name>
<p class="desc">Allows you to edit your alias in console manually.</p>
</cmd>

<cmd><name>aliaslist</name>
<p class="desc">Prints all aliases.</p>
</cmd>

<cmd><name>allskins</name>
<p class="desc">Downloads all skins that is currently in use.
Useful for refreshing skins without
 exiting the level</p>
</cmd>

<cmd><name>bf</name>
<p class="desc">This command shows a background screen flash
that is the same one that is
 produced when the player picked up an item in the game. This
command basically
 serves no useful function except when people want to use it in
scripts to give
 the user some visual feedback when an aliases is used for
example.</p>
</cmd>

<cmd><name>bind</name>
<p class="desc">This command binds one or several commands to
a key. To bind multiple commands
 to a key, enclose the commands in double-quotes (") and separate
them with
 semicolons (;).</p>
</cmd>

<cmd><name>bindlist</name>
<p class="desc">Prints all binds.</p>
 </cmd>

<cmd><name>calendar</name>
<p class="desc">Same as "date" but also shows a small calendar of the month. Nice :)</p>
</cmd>

<cmd><name>cd</name>
<p class="desc">cd play 5 plays cd track #5
 Note: You need -cdaudio to use this command.</p>
</cmd>

<cmd><name>centerview</name>
<p class="desc">Centers the player's view ahead after +lookup
or +lookdown.</p>
</cmd>

<cmd><name>cfg_load</name><arguments>(filename)</arguments>
<p class="desc">This will do a cfg_reset and then execute
filename.cfg (ezquake/configs).</p>
</cmd>

<cmd><name>cfg_reset</name>
<p class="desc">This command will unbind all keys, delete all
aliases, msg_triggers,
 reset all plus commands, teamplay settings and reset all
variables.
 User made variables (created with set/seta) are deleted.
 After resetting all the above, it executes default.cfg and then
autoexec.cfg.</p>
</cmd>

<cmd><name>cfg_save</name><arguments>(filename)</arguments>
<p class="desc">This command will dump all aliases, bindings,
plus commands,
 msg_triggers, teamplay settings and variables to filename.cfg
.
 User made variables (created with set/seta) are saved as
well.
 Note: configs saved with cfg_save are saved in
quake/ezquake/configs/*.cfg</p>
 </cmd>

<cmd><name>cl_messages</name>
<p class="desc">Prints amount and size of messages sent from server to ezQuake client.</p>
</cmd>

<cmd><name>clear</name>
<p class="desc">This command clears the console screen of any
text.</p>
</cmd>

<cmd><name>cmd</name>
<p class="desc">Sends a command directly to the
server.</p>
</cmd>

<cmd><name>cmdlist</name>
<p class="desc">Prints all cmds.</p>
</cmd>

<cmd><name>color</name>
<p class="desc">This command sets the color for the player's
shirt and pants.
 Note: If only the shirt color is given, the pant color will
match.</p>
</cmd>

<cmd><name>connect</name><arguments>(address)</arguments>
<p class="desc">Connects to a QW server.</p>
</cmd>

<cmd><name>cvarlist</name>
<p class="desc">Prints all cvars.</p>
</cmd>

<cmd><name>cvar_reset</name>
<p class="desc">This will reset cvar to default.
 Example:
 cvar_reset topcolor will set topcolor to default.</p>
</cmd>

<cmd><name>demo_capture</name><arguments>(start/stop)</arguments>
<p class="desc">demo_capture start x will capture screenshots
of the demo you are
 playing for x seconds. The screenshots are captured at a
constant 30
 fps and written to demo_capture_dir (default: /capture). You
can
 use 'demo_capture stop' to stop capturing
prematurely.</p>
</cmd>

<cmd><name>demo_jump</name>
<p class="desc">This jumps playback to a point in time you
specify.
 Examples:
 demo_jump 120 will make playback jump to 120 seconds from the
start of
 the demo.
 demo_jump 4:30 will make playback jump to 4 minutes and 30
seconds
 from the start of the demo.</p>
</cmd>

<cmd><name>demo_setspeed</name><arguments>[default: 100]</arguments>
<p class="desc">You can vary the speed of demo playback with
the 'demo_setspeed' command.
 'demo_setspeed x' sets the playback speed to x% of normal speed
so that 'demo_setspeed 50'
 is half speed and 'demo_setspeed 300' gives you triple
speed.</p>
</cmd>

<cmd><name>devmap</name>
<p class="desc">Try it in cheats mode, start a map (devmap
dm6) and type fly.</p>
<remarks>Make sure you bind to your jump key something better than
just +jump:<br />
alias +up "+moveup; +jump"<br />
alias -up "-moveup; -jump"<br />
bind space +up</remarks>
</cmd>

<cmd><name>disconnect</name>
<p class="desc">This command will disconnect you from the
server/demo/proxy you are currently connected to.</p>
</cmd>

<cmd><name>dns</name><arguments>(address)</arguments>
<p class="desc">Performs dns lookups and reverse lookups.</p>
</cmd>

<cmd><name>download</name>
<p class="desc">Manually download a quake file from the
server.
 Example:
 download skins/foo.pcx</p>
</cmd>

<cmd><name>easyrecord</name>
<p class="desc">This start recording demo and rename it like
you have put with match_*
 settings.</p>
</cmd>

<cmd><name>echo</name><arguments>(text)</arguments>
<p class="desc">This command will print text to your local
console.</p>
</cmd>

<cmd><name>edict</name>
<p class="desc">Reports information on a given edict in the
game.</p>
</cmd>

<cmd><name>edictcount</name>
<p class="desc">Displays summary information on the edicts in
the game.</p>
</cmd>

<cmd><name>edicts</name>
<p class="desc">Displays information on all edicts in the
game.</p>
 </cmd>

<cmd><name>enemycolor</name>
<p class="desc">This will overwride enemy color.
 Example:
 enemycolor 12 13
 Note: If only the shirt color is given, the pant color will
match.</p>
</cmd>

<cmd><name>exec</name>
<p class="desc">Executes a config file from \qw, \id1 or
\ezquake.</p>
</cmd>

<cmd><name>filter</name>
<p class="desc">Message filtering system. Only team messages
are filtered.
 Use filter with no parameters to list current filters and filter
clear to remove all filters.
 Example:
 filter #a
 say_team i can see this message #a.
 say_team i can't see this message #d.</p>
</cmd>

<cmd><name>floodprot</name>
<p class="desc">Example:
 floodprot (number of messages) (number of seconds) (silence time
in seconds)</p>
</cmd>

<cmd><name>flush</name>
<p class="desc">This command will clear the current game
cache. It is usually used by developers
 to flush the memory of all game information and objects to test
if the mechanism
 which handles the loading of the necessary files into memory
works properly.
 Sometimes the game cache can become filled with unnecessary
information and may
 need to be flushed manually. This is usually not necessary since
the game
 automatically flushes all the data between every
map.</p>
</cmd>

<cmd><name>fly</name>
<p class="desc">You can fly around the map with flymode
on.
 Note: Needs cheat support by server.</p>
 </cmd>

<cmd><name>fog</name><arguments>R G B</arguments>
<p class="desc">Shortcut for assigning cvars /gl_fogred, /gl_foggreen and /gl_fogblue.</p>
<remarks>Changes color of fog.</remarks>
</cmd>

<cmd><name>force_centerview</name>
<p class="desc">This command centers the player's screen. It
was created because the original
 "centerview" command did not work when "+mlook" was enabled.
This command will
 center the screen in any mode no matter commands are
active.</p>
</cmd>

<cmd><name>fraglogfile</name>
<p class="desc">Enables logging of kills to a file. Useful for
external frag polling programs.
 The file name is frag_##.log</p>
</cmd>

<cmd><name>fullinfo</name>
<p class="desc">Used by QuakeSpy and Qlist to set setinfo
variables.
 Note: Use the setinfo command to see the output.
 Example:
 fullinfo "\quote\I am the only Lamer!\"</p>
</cmd>

<cmd><name>f_modified</name>
<p class="desc">All the usual dm models, sounds, palettes etc
are included in the check.
 In teamfortress the teamfortress flag, dispensers and sentry
guns are also
 checked. There is also an f_modified command which will print
your
 f_modified response.
 Note: You need to install security files.</p>
</cmd>

<cmd><name>f_server</name>
<p class="desc">Prints proxies you are using.</p>
</cmd>

<cmd><name>gamedir</name>
<p class="desc">Specifies the directory where the QWPROGS.DAT
file is found and other additional
 files such as maps, models, sound, and skins for Quake
modifications.
 Note: This command can be specified while a game is in progress,
after the current
 map ends this command will take effect.</p>
</cmd>

<cmd><name>gamma</name>
<p class="desc">You can edit brightness.
 Note: This is shortcut for sw_gamma in vga and gl_gamma in
gl.</p>
</cmd>

<cmd><name>give</name>
<p class="desc">Give user a certain amount of an item.
 Items:
 1 - Axe
 2 - Shotgun
 3 - Double-Barrelled Shotgun
 4 - Nailgun
 5 - Super Nailgun
 6 - Grenade Launcher
 7 - Rocket Launcher
 8 - ThunderBolt
 C - Cells
 H - Health
 N - Nails
 R - Rockets
 S - Shells
 Note: The -cheats parameter must be used to launch the server to
use
 the give command. Also the key and value *cheats ON will be
displayed
 in the serverinfo information.
 Examples:
 give 1234 R 99 will give for user 1234 99 rockets.
 give 1234 7 will give for user 1234 rocket
launcher.</p>
 </cmd>

<cmd><name>gl_checkmodels</name>
<p class="desc">Not well implemented yet. Quickly looks at the pmodel and emodel listed in every player's infokey and reports anything unusual it finds. Basically it saves you having to type "users. user x" and then comparing the models for everyone.</p>
 </cmd>

<cmd><name>gl_inferno</name>
<p class="desc">Clientside (noone else can see it) hard-striking rocket, serves well for your entertainment.</p>
 </cmd>

<cmd><name>gl_setmode</name><arguments>(modename)</arguments>
<p class="desc">Quickly sets many variables to fit pre-defined scheme. Try using "newtrails" or "vultwah".</p>
</cmd>

<cmd><name>god</name>
<p class="desc">You are immortal with god mode on.
 Note: Needs cheats support by server.</p>
</cmd>

<cmd><name>heartbeat</name>
<p class="desc">Forces a heartbeat to be sent to the master
server. A heartbeat informs
 the master server of the server's IP address thus making sure
that
 the master server knows that the server is still
alive.</p>
</cmd>

<cmd><name>help</name>
<p class="desc">Displays ezQuake help.</p>
</cmd>

<cmd><name>if</name>
<p class="desc">Read more at Teamplay section.</p>
</cmd>

<cmd><name>ignore</name><arguments>(name/userid)</arguments>
<p class="desc">You can give ignore either a player's name
(name completion is useful for this)
 or a userid (ignore &lt;name | userid &gt;). ignore without any
command line
 parameters displays your ignore list.</p>
</cmd>

<cmd><name>ignorelist</name>
<p class="desc">Prints ignorelist</p>
</cmd>

<cmd><name>ignore_team</name>
<p class="desc">You can ignore teams instead of players.
 Example:
 ignoreteam nine will ignore whole clan nine.</p>
</cmd>

<cmd><name>ignore_id</name><arguments>(userid)</arguments>
<p class="desc">ignore_id is identical except it only accepts
user id's (only useful if there is
 a player whose name is the userid of someone you want to
ignore).</p>
</cmd>

<cmd><name>impulse</name>
<p class="desc">This command calls a game function or QuakeC
function. Often impulses are used
 by the mod by defining aliases for game functions like "ready"
and "break" that
 call certain impulses.</p>
</cmd>

<cmd><name>inc</name>
<p class="desc">Increments a variable by one or adds to it the
optional second argument.
 There are no 'add' or 'dec' commands because 'inc' can handle
both addition and
 subtraction.
 Example:
 inc sensitivity -2 would subtract 2 from
sensitivity.</p>
</cmd>

<cmd><name>join</name><arguments>(address)</arguments>
<p class="desc">joins a specified server as player. If no
address is specified, join will reconnect to the last visited
server as a player.
 Example:
 join 123.124.125.126
</p> 
</cmd>

<cmd><name>joyadvancedupdate</name>
<p class="desc">This command initializes the joystick's
advanced features. It is necessary to
 issue this command after making any changes to the other
joystick commands. This
 command will initialize all of the settings.</p>
 </cmd>

<cmd><name>keycode</name>
<arguments>keycode [ext] &lt;scancode&gt; &lt;key&gt; [&lt;shiftmap&gt;] [&lt;altgrmap&gt;]</arguments>
<p class="desc">This command enables the setting of a new keymapping.</p>
<remarks>If no key is given, the current mapping of the scancode will be printed. The first call to that command (when no keymapping is active) copies the internal used default for an US keyboard to the keymapping tables.</remarks>
</cmd>

<cmd><name>keymap_init</name>
<p class="desc">This resets the current keymapping and then generates a copy of the internal defaults (US keyboard) to be the new keymappings. This can be used as a base to generate a new keymapping file. It has the same (unchangeable) mapping as the example keymap-file "default.kmap"</p>
 </cmd>

<cmd><name>keymap_list</name>
<p class="desc">This command prints all the current keymappings to the quake console.</p>
 </cmd>

<cmd><name>keymap_load</name>
<arguments>keymap_load [layoutname] &lt;filename&gt;</arguments>
<p class="desc">This command first resets the current keymappings and then loads a new mapping from the given file.</p>
<remarks>Fore more info see Keymap support manual section.</remarks>
</cmd>

<cmd><name>keymap_reset</name>
<p class="desc">This command switches off the current keymappings and sets it back to the internal defaults; it also restores "keymap_name" to its default name "Default". The defaults are an internally defined (and not changeable) keymapping for US keyboards.</p>
 </cmd>

<cmd><name>keymap_save</name>
<arguments>[layoutname] &lt;filename&gt;</arguments>
<p class="desc">With this command the active keymappings will be written to a kmap-file (including a descriptive header which explains the usage).</p>
<remarks>If the layoutname is given, "keymap_name" will be set before saving. If the filename contains no directory, it writes itself to the "qw"-directory.</remarks>
</cmd>

<cmd><name>keymaplist</name>
<p class="desc">This command prints all the current keymappings to the quake console.</p>
</cmd>

<cmd><name>kick</name><arguments>(userid)</arguments>
<p class="desc">Removes a user from the server. Use the status
command to receive the user's id.
 Example:
 kick 1234</p>
</cmd>

<cmd><name>kill</name>
<p class="desc">Suicide. (-2 frags on ktpro/kteam
servers)</p>
</cmd>

<cmd><name>listip</name>
<p class="desc">Prints out the current list of IPs on the
server list. Not to be confused with
 the status command which prints out the list of the IPs of the
connected players.</p>
</cmd>

<cmd><name>load</name><arguments>(filename)</arguments>
<p class="desc">Load 123 loads saved game 123.</p>
</cmd>

<cmd><name>loadcharset</name>
<p class="desc">In older versions of FuhQuake (v0.30 and
lower), FuhQuake looked for an image called
 charset.png (or .tga) and if it found it then that was made to
be your console font.
 Starting from FuhQuake v0.31, you can change your console font
from within FuhQuake.
 Put all your charset images in qw/textures/charsets/*.png (and
*.tga) and use
 /loadcharset XXX to load XXX.png (or tga). "/loadcharset
original" will restore the 8bit
 font in your gfx.wad (this is default). Note that the
/loadcharset command is just a 'shortcut'
 for the new gl_consolefont variable.</p>
</cmd>

<cmd><name>loadfragfile</name><arguments>(filename)</arguments>
<p class="desc">loadfragfile 123 loads fragfile
123</p>
</cmd>

<cmd><name>loadloc</name><arguments>(filename)</arguments>
<p class="desc">Loads a loc file (must be located in id1/locs,
qw/locs, or ezquake/locs.
 The ".loc" extention is optional, for example, "loadloc dm6"; if
the file name has
 no extension, use its explicit name ("loadloc
dm6.").</p>
</cmd>

<cmd><name>loadsky</name><arguments>(filename)</arguments>
<p class="desc">Loads your skybox (qw\env).
 Example:
 loadsky snow</p>
</cmd>

<cmd><name>localinfo</name>
<p class="desc">Shows or sets localinfo variables. Useful for
mod programmers who need to allow the admin
 to change settings. This is an alternative storage space to the
serverinfo space for mod
 variables. The variables stored in this space are not broadcast
on the network.
 This space also has a 32-kilobyte limit which is much greater
then the 512-byte limit on
 the serverinfo space.
 Special Keys: (current map) (next map) - Using this combination
will allow the creation
 of a custom map cycle without editing code.
 Examples:
 localinfo dm2 dm4
 localinfo dm4 dm6
 localinfo dm6 dm2</p>
</cmd>

<cmd><name>log</name><arguments>(filename)</arguments>
<p class="desc">If you type "log filename" it will log console
to filename.log in your gamedir.
 It overwrites logs without asking.</p>
</cmd>

<cmd><name>macrolist</name>
<p class="desc">Prints all macros.</p>
</cmd>

<cmd><name>map</name>
<p class="desc">loads a map and start a game.
 Example: map e1m1</p>
</cmd>

<cmd><name>mapgroup</name>
<p class="desc">mapgroup 2fort5r 2fort5: will make 2fort5r and
2fort5 use the 2fort5r textures, locs and etc...</p>
</cmd>

<cmd><name>match_forcestart</name>
<p class="desc">Simulates the start of a match (so that auto
recording etc is triggered). Useful if you join a
 ktpro server after countdown has started, or you are playing a
mode that doesn't have a
 proper countdown (eg race mode).
 Most importantly this is useful for tf servers, since you can
use a msg_trigger to execute
 match_forcestart on "MATCH BEGINS NOW".</p>
</cmd>

<cmd><name>match_format_macrolist</name>
<p class="desc">Prints a list of the macros and their meaning
for autorecording and autoscreenshots.</p>
</cmd>

<cmd><name>match_save</name>
<p class="desc">If you are using 'match_auto_record 1' then a
temp demo will be recorded to
 c:\quake\ezquake\temp\_!_temp_!_.qwd each time a map starts.
This temp demo will be overwritten
 when the next match starts. If you want to keep the temp demo,
use the "match_save" command.
 This will move the demo to the same folder and filename that
easyrecord would have used.</p>
</cmd>

<cmd><name>menu_demos</name>
<p class="desc">This command will display the demos
menu.</p>
</cmd>

<cmd><name>menu_fps</name>
<p class="desc">This command will display the fps
menu.</p>
</cmd>

<cmd><name>menu_help</name>
<p class="desc">This command will display the help
menu.</p>
</cmd>

<cmd><name>menu_keys</name>
<p class="desc">This command will display the keys
menu.</p>
</cmd>

<cmd><name>menu_load</name>
<p class="desc">This command will display the load menu to
load singleplaying saves.</p>
</cmd>

<cmd><name>menu_main</name>
<p class="desc">This command will display the main
menu.</p>
</cmd>

<cmd><name>menu_mp3_control</name>
<p class="desc">This command will display the mp3
menu.</p>
</cmd>

<cmd><name>menu_mp3_playlist</name>
<p class="desc">This command will display the mp3 playlist
menu.</p>
</cmd>

<cmd><name>menu_multiplayer</name>
<p class="desc">This command will display the multiplayer
menu.</p>
</cmd>

<cmd><name>menu_options</name>
<p class="desc">This command will display the options
menu.</p>
</cmd>

<cmd><name>menu_quit</name>
<p class="desc">This command will display the quit
menu.</p>
</cmd>

<cmd><name>menu_save</name>
<p class="desc">This command will display the save menu to
save singleplaying games.</p>
</cmd>

<cmd><name>menu_setup</name>
<p class="desc">This command will display the setup
menu.</p>
</cmd>

<cmd><name>menu_singleplayer</name>
<p class="desc">This command will display the singleplayer
menu.</p>
</cmd>

<cmd><name>menu_slist</name>
<p class="desc">This command will display the slist
menu.</p>
</cmd>

<cmd><name>menu_video</name>
<p class="desc">This command will display the video
menu.</p>
</cmd>

<cmd><name>messagemode</name>
<p class="desc">Prompts for string to broadcast to all other
players.</p>
</cmd>

<cmd><name>messagemode2</name>
<p class="desc">Prompts for string to broadcast to team
members.</p>
</cmd>

<cmd><name>mp3_fadeout</name>
<p class="desc">Like stop but fades out.</p>
</cmd>

<cmd><name>mp3_fforward</name>
<p class="desc">Fast forward 5seconds.</p>
</cmd>

<cmd><name>mp3_loadplaylist</name><arguments>(filename)</arguments>
<p class="desc">Loads the playlist filename.m3u
 Example:
 mp3_loadplaylist top10 will load top10.m3u</p>
</cmd>

<cmd><name>mp3_next</name>
<p class="desc">Next song.</p>
</cmd>

<cmd><name>mp3_pause</name>
<p class="desc">Pause mp3.</p>
</cmd>

<cmd><name>mp3_play</name>
<p class="desc">Play mp3.</p>
</cmd>

<cmd><name>mp3_playlist</name>
<p class="desc">Displays playlist. Currently playign track is
highlighted.</p>
</cmd>

<cmd><name>mp3_playtrack</name><arguments>(track)</arguments>
<p class="desc">Play track number #num from playlist.
 Example:
 mp3_playtrack 5 will play track 5 from playlist.</p>
</cmd>

<cmd><name>mp3_prev</name>
<p class="desc">Previous song.</p>
</cmd>

<cmd><name>mp3_repeat</name><arguments>(off/on)</arguments>
<p class="desc">Repeat playlist.</p>
</cmd>

<cmd><name>mp3_rewind</name>
<p class="desc">Rewind 5seconds.</p>
</cmd>

<cmd><name>mp3_shuffle</name><arguments>(off/on)</arguments>
<p class="desc">Shuffle mp3s.</p>
</cmd>

<cmd><name>mp3_songinfo</name>
<p class="desc">displays song title and other info like time
elapsed, total time,
 and whether paused, stopped or playing.</p>
</cmd>

<cmd><name>mp3_startwinamp</name>
<p class="desc">Starts winamp if winamp is not
running.</p>
</cmd>

<cmd><name>mp3_stop</name>
<p class="desc">Stop mp3.</p>
</cmd>

<cmd><name>msg_trigger</name>
<p class="desc">msg_trigger &lt;alias&gt; &lt;string&gt;, but
you can have nested aliases like this :
 "alias d c; alias c b; alias b a; alias a say hello" and
then
 msg_trigger d "hi" will say 'hello' whenever someone says
'hi'.
 Of course there's much more useful examples of nested
aliases.
 Also there is no way of executing forbidden msg_trigger commands
in ezQuake.</p>
</cmd>

<cmd><name>noclip</name>
<p class="desc">You can fly and go thru objects (free mode as
spectator)
 Note: Needs cheats support by server.</p>
</cmd>

<cmd><name>observe</name><arguments>(address)</arguments>
<p class="desc">observe connects you to a server as a
spectator. If no address is specified, observe will reconnect to
the last visited server as a spectator.
 Example:
 observe 123.124.125.126</p>
</cmd>

<cmd><name>packet</name><arguments>(address)</arguments>
<p class="desc">Sends a packet with specified contents to the
destination.
 Example:
 packet 123.123.123.123:27500 "status"</p>
</cmd>

<cmd><name>password</name>
<p class="desc">Set the password to enter a password protected
server.</p>
</cmd>

<cmd><name>path</name>
<p class="desc">Shows what paths ezQuake is
using.</p>
</cmd>

<cmd><name>pause</name>
<p class="desc">Pauses a game.
 Note: Servers must support pausing.</p>
</cmd>

<cmd><name>play</name><arguments>(filename)</arguments>
<p class="desc">Plays a sound effect.
 Example:
 play misc/runekey.wav</p>
</cmd>

<cmd><name>playdemo</name><arguments>(filename)</arguments>
<p class="desc">Plays a recorded demo.
 Example:
 playdemo thresh.qwd</p>
</cmd>

<cmd><name>playvol</name><arguments>(filename)</arguments>
<p class="desc">Plays a sound at a given volume.
 Examples:
 playvol items/protect.wav .5
 playvol items/protect.wav 2</p>
</cmd>

<cmd><name>pointfile</name><arguments>(filename)</arguments>
<p class="desc">If qbsp generates a non-zero .pts file a leak
exists in the level. This file is created in the maps directory.
By using the pointfile command, it will load the .pts file and
give a dotted line indicating where the leak(s) are on the
level.</p>
</cmd>

<cmd><name>profile</name>
<p class="desc">Reports information about QuakeC
stuff.</p>
</cmd>

<cmd><name>quit</name>
<p class="desc">Exits the game.</p>
</cmd>

<cmd><name>rcon</name>
<p class="desc">Issue the set of commands to the server you
are currently connected to or
 have set in rcon_address. You must know the rcon password for
that specific
 server.</p>
</cmd>

<cmd><name>reconnect</name>
<p class="desc">Reconnects to the last
server/proxy.</p>
</cmd>

<cmd><name>record</name><arguments>(filename)</arguments>
<p class="desc">Records a demo.
 Example:
 record test records test.qwd to qw folder</p>
</cmd>

<cmd><name>removeip</name><arguments>(ip)</arguments>
<p class="desc">Removes an IP address from the server IP
list.
 Examples:
 removeip 123.123.123.123
 removeip 123.123.123</p>
</cmd>

<cmd><name>rotate</name>
<p class="desc">rotates the player by x degrees.
 Note: Negative values can also be used for the desired
angle.
 Example: "rotate 180" will rotate your pov by 180
degrees.</p>
</cmd>

<cmd><name>save</name>
<p class="desc">To save games in singleplaying.
 Example: save 123</p>
</cmd>

<cmd><name>say</name>
<p class="desc">Broadcasts a string to all other
players.
 Example: say ezQuake rules!</p>
</cmd>

<cmd><name>say_team</name>
<p class="desc">Broadcasts a string to teammates.
 Example: say_team stop boring!</p>
 </cmd>

<cmd><name>sb_sourcemark</name><arguments>&gt;source-name&lt;</arguments>
<p class="desc">Marks "source-name" as selected server source list.</p>
 </cmd>

<cmd><name>sb_sourceunmarkall</name>
<p class="desc">Unmarks all servers sources.</p>
</cmd>

<cmd><name>screenshot</name>
<p class="desc">Captures a .pcx file in vga and .tga in gl of
your current view.
 Note: You can change format of screenshots, read more at
screenshot <a
href="http://fuhquake.quakeworld.nu/admin/variables_list.php#ScreenshotSettings">settings</a>.</p>
</cmd>

<cmd><name>serverinfo</name>
<p class="desc">Reports the current server info.</p>
</cmd>

<cmd><name>serverstatus</name>
<p class="desc">Prints server status.</p>
</cmd>

<cmd><name>set</name>
<p class="desc">Sets a variable.</p>
</cmd>

<cmd><name>setinfo</name>
<p class="desc">Sets information about your FuhWorld user.
Used without a key it will list
 all of your current settings. Specifying a non-existent key and
a value will
 create the new key.</p>
</cmd>

<cmd><name>setmaster</name>
<p class="desc">Lists the server with up to eight masters.
When a server is listed with a master,
 the master is aware of the server's IP address and port and it
is added to the
 list of current server connected to a master. A heartbeat is
sent to the master
 from the server to indicated that the server is still running
and alive.
 Examples:
 setmaster 192.246.40.12:27002
 setmaster 192.246.40.12:27002 192.246.40.12:27004</p>
</cmd>

<cmd><name>sizedown</name>
<p class="desc">Reduces the screen size.</p>
</cmd>

<cmd><name>sizeup</name>
<p class="desc">Increases the screen size.</p>
</cmd>

<cmd><name>skins</name>
<p class="desc">Refreshes skin settings.
 Note: If you have set noskins to 0 and do this it will download
all skins
 that players are using on server.</p>
 </cmd>

<cmd><name>skygroup</name>
<arguments>skyboxname map1 [map2] ...</arguments>
<p class="desc">In basics works same as mapgroup.</p>
<remarks>You assing one skybox texture to group of maps.</remarks>
</cmd>

<cmd><name>snap</name><arguments>(userid)</arguments>
<p class="desc">Remote screenshot from a player.
 Example:
 snap 1234 (server request remote screenshot from user
1234)</p>
</cmd>

<cmd><name>snapall</name>
<p class="desc">Remote screenshots from all
players.</p>
</cmd>

<cmd><name>snd_restart</name>
<p class="desc">Restarts sounds.</p>
</cmd>

<cmd><name>soundinfo</name>
<p class="desc">Reports information on the sound
system.</p>
</cmd>

<cmd><name>soundlist</name>
<p class="desc">Reports a list of sounds in the
cache.</p>
</cmd>

<cmd><name>spectator_password</name>
<p class="desc">Sets spectator password to ezQuake local
server.
 Note: spectator (password) to connect server that got spectator
password.</p>
</cmd>

<cmd><name>status</name>
<p class="desc">Reports information on the current connected
clients and the server.</p>
</cmd>

<cmd><name>stop</name>
<p class="desc">Stops demo recording.</p>
</cmd>

<cmd><name>stopsound</name>
<p class="desc">Stops all sounds currently being
played.</p>
</cmd>

<cmd><name>sv_gamedir</name>
<p class="desc">Displays or determines the value of the
serverinfo *gamedir variable.
 Note: Useful when the physical gamedir directory has a
different
 name than the widely accepted gamedir directory.
 Examples:
 gamedir tf2_5; sv_gamedir fortress
 gamedir ctf4_2; sv_gamedir ctf</p>
</cmd>

<cmd><name>teamcolor</name>
<p class="desc">This will overwride team color.
 Example: teamcolor 12 13
 Note: If only the shirt color is given, the pant color will
match.</p>
</cmd>

<cmd><name>tempalias</name>
<p class="desc">cfg_save won't save to tempaliases to
config.</p>
</cmd>

<cmd><name>timedemo</name><arguments>(filename)</arguments>
<p class="desc">This command can be used to test how fast your
computer is by looking at the
 frames-per-second rate achieved by playing back a demod at top
speed. This
 command will play back all of the frames for a given demo as
fast as possible
 and then record the amount of time that it took to play back all
of the frames
 from that demo. Then this command will take the total number of
frames in a
 demo, divide that number by the amount of time that it took to
play back those
 demos, and calculate the average frames-per-second rate.
 Example:
 timedemo 123.qwd
 timedemo 123.mvd</p>
</cmd>

<cmd><name>timerefresh</name>
<p class="desc">This command will perform a 360 degree turn
and calculate the frames-per-second
 rate.</p>
</cmd>

<cmd><name>toggle</name>
<p class="desc">You can turn off/on cvars.
 Example:
 toggle sensitivity turns off sensitivity and toggle sensitivity
again turns on.</p>
</cmd>

<cmd><name>toggleconsole</name>
<p class="desc">Toggles the console.</p>
</cmd>

<cmd><name>togglemenu</name>
<p class="desc">Displays the menu screens.</p>
</cmd>

<cmd><name>tp_pickup</name>
<p class="desc">Set items you want to report ($took)<br />
Item can be: quad, pent, ring, suit, ra, ya, ga, mh, health, lg, 
rl, gl, sng, ng, ssg, pack, cells, rockets, nails, shells, flag, 
armor, weapons, powerups, ammo, all, default, none</p>
</cmd>

<cmd><name>tp_point</name>
<arguments>[item1] [item2] ...</arguments>
<p class="desc">What to report for pointing (%x, %y and %t).<br />
Item can be: powerups, quad, pent, ring, armor, ra, ya, ga, 
weapons, lg, rl, gl, sng, ng, ssg, 
ammo, cells, rockets, nails, shells, 
players, eyes, teammate, enemy, 
mh, health, pack, flag, all, default, none, suit 
Item names can be customized with tp_name_item</p>
</cmd>

<cmd><name>tp_took</name>
<arguments>[item1] [item2] ...</arguments>
<p class="desc">Customizes the f_took trigger.<br />
Item can be: quad, pent, ring, suit, ra, ya, ga, mh, health, lg, 
rl, gl, sng, ng, ssg, pack, cells, rockets, nails, shells, flag, 
armor, weapons, powerups, ammo, all, default, none 
Item names can be customized with tp_name_item</p>
<remarks>You can also do<br />
tp_took all -ammo (report everything but ammo)<br />
tp_took +gl (add grenade launcher to pickup list)</remarks>
</cmd>

<cmd><name>track-</name>
<p class="desc">This means when you are spectating or watching
an mvd, keys will automatically be assigned
 to track certain players (so in a 4v4 8 keys are needed, the
first 4 make you track the
 4 players in the first team and the last 4 make you track the
second team).</p>
 </cmd>

<cmd><name>trackteam</name><arguments>1,2</arguments>
<p class="desc">Sets screens of multiview mode to track 1<sup>st</sup> or 2<sup>nd</sup> team.</p>
</cmd>

<cmd><name>unalias</name>
<p class="desc">Example:
 unalias myreport removes myreport alias.</p>
</cmd>

<cmd><name>unaliasall</name>
<p class="desc">Removes all aliases.</p>
</cmd>

<cmd><name>unbind</name>
<p class="desc">Example: unbind x delete strings on x
button.</p>
</cmd>

<cmd><name>unbindall</name>
<p class="desc">Removes all binds.</p>
</cmd>

<cmd><name>unignore</name><arguments>(name/userid)</arguments>
<p class="desc">unginore name or userid number to remove
ignore.</p>
</cmd>

<cmd><name>unignoreAll</name>
<p class="desc">Removes all ignores.</p>
</cmd>

<cmd><name>unignoreAll_team</name>
<p class="desc">Removes all ignored teams.</p>
</cmd>

<cmd><name>unignore_id</name><arguments>(userid)</arguments>
<p class="desc">unignore usedid removed player from
ignore.</p>
</cmd>

<cmd><name>unignore_team</name>
<p class="desc">If you have ignored team nine and wan't to
remove team nine from ignore so type unignore_team nine
 to remove ignore.</p>
</cmd>

<cmd><name>user</name><arguments>(userid)</arguments>
<p class="desc">This command queries the user for his setinfo
information.</p>
</cmd>

<cmd><name>userinfo</name>
<p class="desc">Prints your user settings.</p>
</cmd>

<cmd><name>users</name>
<p class="desc">Reports information on connected players and
retrieve user ids.</p>

</cmd>

<cmd><name>validate_clients</name>
<p class="desc">This shows authed ezQuake users, nonauthed
and non ezQuake users.</p>
</cmd>

<cmd><name>version</name>
<p class="desc">Reports version information.</p>
</cmd>

<cmd><name>vid_forcemode</name>
<p class="desc">This command will force ezQuake to use a
certain video mode.</p>
</cmd>

<cmd><name>vid_fullscreen</name>
<p class="desc">This command will switch to a fullscreen video
mode specified in the
 "vid_fullscreen_mode" variable.</p>
</cmd>

<cmd><name>vid_minimize</name>
<p class="desc">This command will minimize the windowed game
screen. It was made available
 because the game takes control over the mouse when it is moved
onto the game
 window thus prohibiting the normal minimization of the game
window.</p>
</cmd>

<cmd><name>vid_modelist</name>
<p class="desc">Prints all supported video modes.</p>
</cmd>

<cmd><name>vid_testmode</name>
<p class="desc">This command will switch to the specified
video mode for 5-seconds in order to
 test it.</p>
</cmd>

<cmd><name>vid_windowed</name>
<p class="desc">This command will switch the a windowed video
mode specified in the
 "vid_windowed_mode" variable.</p>
</cmd>

<cmd><name>viewalias</name>
<p class="desc">Example:
 viewalias mystatus print mystatus alias.</p>
</cmd>

<cmd><name>v_cshift</name>
<p class="desc">This adjusts all of the colors currently being
displayed.
 Used when you are underwater, hit, have the Ring of Shadows,
or
 Quad Damage.
 Example: v_cshift 16 32 64
 Note: v_cshift (red) (green) (blue) (intensity)</p>
</cmd>

<cmd><name>wait</name>
<p class="desc">Adds one frame wait</p>
</cmd>

<cmd><name>windows</name>
<p class="desc">Switches away from client and back to the
Windows OS.</p>
</cmd>

<cmd><name>writeconfig</name><arguments>(filename)</arguments>
<p class="desc">Writes all your binds and cvars to a custom
config file.
 Example: writeconfig test</p>
</cmd>

<cmd><name>writeip</name>
<p class="desc">Records all IP addresses on the server IP
list. The file name is listip.cfg.</p>
</cmd>

</commands>